/*Car에서 상속받아서 사용, 택시만의 특징갖기 oop의목적은 상속이다.
sun사에 의해 디폴트 생성자가 부모의 생성자를 호출하는지 증명해보자 부모의 생성자에 무언가 동작여부를 확인할 수 있는 코드를 넣자. 
Taxi클래스의 디폴트 생성자에서는 무조건 super()가 들어있으므로, 매개변수 없는 생성자인 Car()를 호출하고 있는 것과 같다.
따라서 현재 Car에는 Car()생성자 대신에 Car(String brand)만 존재하므로, 생성자 호출시 에러가 난다. 
원하는 생성자는 호출을 직접해야한다. 디폴트생성자에 의존 x 방치하지말자..
*/

package car;
public class Taxi extends Car{
	/*
	디폴트 생성자를 만들고  그안에서 다시 super();을 호출하게 될것이다. 그렇게 되면 오버로딩된 생성자 중 두번째 디폴트 생성자를 호출하게 되어서 에러가 안납니다. 
	public Taxi(){
		super("Benz");//매개변수 있는 생성자를 호출한다..이렇게 하면 존재하는 생성자를 제대로 호출 하는 것이므로 더이상 에러가 나지 않는다. 
		
	}
	*/
	//위와 같이 개발자가 직접 알맞는 생성자를 정의하는 방법을 추천하지만, 혹시 이런경우도 잇다. 부모클래스에 생성자를 여러개를 정의하고, 
	//택시만의 특징
	public void pass(){
		System.out.println("승객을 태워요");
	}
}
